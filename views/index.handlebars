<!DOCTYPE html>
<html>
  <head>
    <title>MoveSafe - Safe Path</title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <link href="/css/MoveSafe.css" rel="stylesheet">
      <link href="https://use.fontawesome.com/releases/v5.0.6/css/all.css" rel="stylesheet">
     <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
  <link href="/css/bootstrap.css" rel="stylesheet">
      <link href="https://use.fontawesome.com/releases/v5.0.6/css/all.css" rel="stylesheet">


  </head>
  <body>

<div class="topnav card-block">
  <a href="/" id="navigationBar-active"><img src="images/home.png"height="20" width="20"></a>
  <a padding="100px" id="navigationBarTitle" style="position:absolute;right:0;font-weight:bold; font-family:Century Gothic" align="right">Move Safe</a>
</div>
<br>
<br>
<div class="col-md-6 main-div mx-auto" >
    <div class="card" style="margin:30px 0 0 0;">
        <div class="card-block" width: 270px;>
            <div class="card-header" style="font-family:Century Gothic; ">
                <h1 style="margin:0 0 0 40px;">Find a Safe Path</h1>
            </div>
        </div>
    </div>
</div>
<br>
<br>
<!--place holder--> 
  <form action="/safePath" method="post">
    <div class="form-group centered">
        <img src="images/A_Point.png" height="26" width="16">
        <input required id="origin-input" class="controls"  type="text" name="start" value="{{start}}" placeholder="enter an origin location">
      <!--<button  id="reset-button-start" onclick="clearTextStart()">x</button>-->
    </div>
    <div class="form-group centered">
        <img src="images/B_Point.png" height="26" width="22" style="margin:0 0 5px 0;">
        <input required id="destination-input" class="controls"  type="text" name="destination" value="{{destination}}" placeholder="enter a destination location">
      <!--<button  id="reset-button-dest" onclick="clearTextDest()">x</button>-->
    </div>
    <br>
    <div class="form-group centered"> 
      <div class="col-sm-offset-2 col-sm-10">
        <button class="btn btn-primary" style="margin:-10px 0 0 219px; height:26px; font-size:20px font-family:Century Gothic;" type="submit">Search</button>
        <br><br><br>
      </div>
    </div>
  </form>
</div>
</div>
<script>
    // This example requires the Places library. Include the libraries=places
    // parameter when you first load the API. For example:
    // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

    var map;
    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            center: {lat: -28, lng: 137},
            zoom: 4
        });

        // NOTE: This uses cross-domain XHR, and may not work on older browsers.

        console.log("about to load geoJson file!");
        map.data.loadGeoJson('https://storage.googleapis.com/mapsdevsite/json/google.json');
    }



    // /**
    //  * @constructor
    //  */
    // function AutocompleteDirectionsHandler(map) {
    //     this.map = map;
    //     this.originPlaceId = null;
    //     this.destinationPlaceId = null;
    //     this.travelMode = 'WALKING';
    //     var originInput = document.getElementById('origin-input');
    //     var destinationInput = document.getElementById('destination-input');
    //     var modeSelector = document.getElementById('mode-selector');
    //     this.directionsService = new google.maps.DirectionsService;
    //     this.directionsDisplay = new google.maps.DirectionsRenderer;
    //     this.directionsDisplay.setMap(map);
    //     var originAutocomplete = new google.maps.places.Autocomplete(
    //             originInput, {placeIdOnly: true});
    //     var destinationAutocomplete = new google.maps.places.Autocomplete(
    //             destinationInput, {placeIdOnly: true});
    //     this.setupClickListener('changemode-walking', 'WALKING');
    //     this.setupClickListener('changemode-transit', 'TRANSIT');
    //     this.setupClickListener('changemode-driving', 'DRIVING');
    //     this.setupPlaceChangedListener(originAutocomplete, 'ORIG');
    //     this.setupPlaceChangedListener(destinationAutocomplete, 'DEST');
    //     this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(originInput);
    //     this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(destinationInput);
    //     this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(modeSelector);
    // }
    // // Sets a listener on a radio button to change the filter type on Places
    // // Autocomplete.
    // AutocompleteDirectionsHandler.prototype.setupClickListener = function(id, mode) {
    //     var radioButton = document.getElementById(id);
    //     var me = this;
    //     radioButton.addEventListener('click', function() {
    //         me.travelMode = mode;
    //         me.route();
    //     });
    // };
    // AutocompleteDirectionsHandler.prototype.setupPlaceChangedListener = function(autocomplete, mode) {
    //     var me = this;
    //     autocomplete.bindTo('bounds', this.map);
    //     autocomplete.addListener('place_changed', function() {
    //         var place = autocomplete.getPlace();
    //         if (!place.place_id) {
    //             window.alert("Please select an option from the dropdown list.");
    //             return;
    //         }
    //         if (mode === 'ORIG') {
    //             me.originPlaceId = place.place_id;
    //         } else {
    //             me.destinationPlaceId = place.place_id;
    //         }
    //         me.route();
    //     });
    // };
    // AutocompleteDirectionsHandler.prototype.route = function() {
    //     if (!this.originPlaceId || !this.destinationPlaceId) {
    //         return;
    //     }
    //     var me = this;
    //     this.directionsService.route({
    //         origin: {'placeId': this.originPlaceId},
    //         destination: {'placeId': this.destinationPlaceId},
    //         travelMode: this.travelMode
    //     }, function(response, status) {
    //         if (status === 'OK') {
    //             me.directionsDisplay.setDirections(response);
    //         } else {
    //             window.alert('Directions request failed due to ' + status);
    //         }
    //     });
    // };

    // // new
    // google.maps.event.addDomListener(window, 'load', initMap);

</script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBUdtXMIyuZHmdW2tB8_dvlFtpKIkTVZi4&libraries=places&callback=initMap"></script>
<script src="/js/MoveSafe.js"></script>
<!--<script src="/routes/SafePath.js"></script>-->
  </body>
</html>